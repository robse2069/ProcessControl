CSN and Control Node configurator

Use cases

Uc1: Configuration
Pre:
Node connected via CAN
Other nodes also connected via CAN
Node blank or preconfigured
GUI not started
CAN Adapter connected

Doing:
Start gui
Select Node
Check current configuration parameters
Enter new parameters
Upload parameters
Backread parameters

Done:
New parameters in node

Uc2: Verification
Pre:
Node connected to pc via can
Other nodes also connected via CAN
GUI closed
Node configured
Sensor/aktor connected to node

Doing:
Open gui
Select Node
Check parameters
Read current sensor value Or control Aktor
Verify CSN Value against external measuring device

Done:
Values / function verified or faults known


Requirements
Running in Python
CAN adapter shall be used
Connection to can adapter shall be established automatically
Reading of values shall be updated automatically
Update of all values and parameters shall occur every 500ms
Reading and display of parameters shall be updated automatically
Parameters shall be send via Button
Parameters shall be entered as signed integers
Control shall be send on button click
Control shall be entered as signed integers

Functions
GUI-init: establish connection, initalize gui
GUI-Update: read can Bus and update gui every 500ms
Button-functions: according to Buttons

Classes:
GUI(tkinter)
    __init__
    buttonfunctions
        SelectNode (after entering node-ID / CAN-ID; starts Setup mode in Node)
            calls readNodeData
        writeParameters
        WriteControl

    updateValues

NodeData
    __init__
        value_16U
        valueSet_16U
        valueDefault_16U
        valueMax_16U
        valueMin_16U
        valueOffset_16U
        valueMultiplier_m_16U
        CanID_8U
        unit_8x8U
        name_8x8U
        updaterate_ms_16U
        nodeType
        lastErrorcode

    readNodeData
    WriteNodeData